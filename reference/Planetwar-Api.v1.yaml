openapi: 3.0.0
info:
  title: Planetwar Api
  version: '1.0'
  contact:
    name: Jannes Kaspar-MÃ¼ller
    url: 'https://jkamue.de'
    email: mail@jkamue.de
servers:
  - url: 'http://planetwar.jkamue.de/api'
  - url: 'http://localhost:8080/api'
    description: ''
paths:
  /map:
    get:
      summary: Query whole map
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-map
      tags:
        - Gameinformation
      description: Receive a detalied list of everything on the map
      security:
        - account-key: []
        - game-key: []
      parameters: []
  /players:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Owner'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
      operationId: get-players
      description: Receives a List of all players
      security:
        - account-key: []
        - game-key: []
  /stats:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stats'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-stats
      security:
        - account-key: []
        - game-key: []
      description: Receive stats of each player in the round
components:
  schemas:
    Ships:
      title: Ships
      type: object
      description: Collection of ships
      properties:
        location:
          $ref: '#/components/schemas/Location'
        amount:
          type: string
        owner:
          $ref: '#/components/schemas/Owner'
      required:
        - location
        - amount
        - owner
    Location:
      title: Location
      type: object
      properties:
        X:
          type: integer
          minimum: 0
          description: X coordinate on map
        'Y':
          type: integer
          minimum: 0
          description: Y coordinate on map
      required:
        - X
        - 'Y'
    Tile:
      title: Tile
      type: object
      description: Stores the objects of one map tile
      properties:
        location:
          $ref: '#/components/schemas/Location'
        ships:
          $ref: '#/components/schemas/Ships'
        hasShips:
          type: boolean
          description: Ships is only set if hasShips is true
        planet:
          $ref: '#/components/schemas/Planet'
        hasPlanet:
          type: boolean
          description: Planet is only set if hasPlanet is true
      required:
        - location
        - hasShips
        - hasPlanet
    Planet:
      title: Planet
      type: object
      description: Stores planet information
      properties:
        location:
          $ref: '#/components/schemas/Location'
        owner:
          $ref: '#/components/schemas/Owner'
        production:
          type: integer
          minimum: 0
          exclusiveMinimum: true
          description: Production of ships per round
        skin:
          type: integer
          minimum: 0
          description: The planets skin
      required:
        - location
        - owner
        - production
        - skin
    Owner:
      title: Owner
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The owner uuid
        name:
          type: string
          description: Owner display name
      required:
        - id
        - name
    Map:
      title: Map
      type: object
      description: A collection of tiles that make up the map
      x-examples: {}
      properties:
        tiles:
          type: array
          items:
            $ref: '#/components/schemas/Tile'
        size:
          type: integer
          minimum: 0
          description: Height and width of the square map
      required:
        - tiles
        - size
    Error:
      title: Error
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        description:
          type: string
      required:
        - id
        - title
        - description
    Stats:
      title: Stats
      type: object
      description: Stats for one player
      properties:
        player:
          $ref: '#/components/schemas/Owner'
        visibleShips:
          type: integer
          minimum: 0
        planets:
          type: integer
          minimum: 0
        you:
          type: boolean
      required:
        - player
        - visibleShips
        - planets
        - you
  securitySchemes:
    account-key:
      type: apiKey
      in: header
      description: This is one of your accounts keys
    game-key:
      type: apiKey
      in: header
      description: This your access key to the your current game
